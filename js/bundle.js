!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=45)}([function(t,e){const n={all:[[0,1],[0,-1],[1,0],[-1,0],[-1,-1],[1,1],[-1,1],[1,-1]],adjacent:[[0,1],[0,-1],[1,0],[-1,0]],corners:[[-1,-1],[1,1],[-1,1],[1,-1]],allSelf:[[0,0],[0,1],[0,-1],[1,0],[-1,0],[-1,-1],[1,1],[-1,1],[1,-1]],inRange:function(t){for(var e=[],n=-t;n<=t;n++)for(var r=-t;r<=t;r++)e.push([n,r]);return e}};t.exports=n},function(t,e){const n={empty:{name:"empty",color:"#121D29",is_living:!1},wall:{name:"wall",color:"#3a4b68",is_living:!1},food:{name:"food",color:"#81d2c7",is_living:!1},mouth:{name:"mouth",color:"#9099c2",is_living:!0},killer:{name:"killer",color:"#d14d72",is_living:!0},producer:{name:"producer",color:"#66a39b",is_living:!0},mover:{name:"mover",color:"#416788",is_living:!0},armor:{name:"armor",color:"#c0e5c8",is_living:!0},eye:{name:"eye",color:"#fdd49e",is_living:!0},all:[],living:[],all_but_empty:[],getRandomLivingType:function(){return this.living[Math.floor(Math.random()*this.living.length)]},getRandomName:function(){return this.all[Math.floor(Math.random()*this.all.length)].name}};for(var r in n)n.hasOwnProperty(r)&&"object"==typeof n[r]&&n.all.push(n[r]);for(var o of n.all)o.is_living&&n.living.push(o),o.name!="empty"&&n.all_but_empty.push(o);t.exports=n},function(t,e){const n={up:0,down:1,left:2,right:3,getRandomDirection:function(){return Math.floor(4*Math.random())},getRandomScalar:function(){return this.scalars[this.getRandomDirection()]},getOppositeDirection:function(t){switch(t){case this.up:return this.down;case this.down:return this.up;case this.left:return this.right;case this.right:return this.left}},scalars:[[0,-1],[0,1],[-1,0],[1,0]]};t.exports=n},function(t,e,n){const r=n(0),o={setDefaults:function(){this.lifespanMultiplier=100,this.foodProdProb=5,this.killableNeighbors=r.adjacent,this.edibleNeighbors=r.adjacent,this.growableNeighbors=r.adjacent,this.useGlobalMutability=!1,this.globalMutability=5,this.addProb=33,this.changeProb=33,this.removeProb=33,this.rotationEnabled=!0,this.foodBlocksReproduction=!0,this.moversCanProduce=!1,this.instaKill=!1,this.lookRange=20,this.seeThroughSelf=!1,this.foodDropProb=0,this.extraMoverFoodCost=0,this.maxOrganisms=-1},loadJsonObj(t){for(const e in t)Object.prototype.hasOwnProperty.call(this,e)&&(this[e]=t[e])}};o.setDefaults(),t.exports=o},function(t,e){const n={copyNonObjects:function(t){let e={};for(let n in t)"object"!=typeof t[n]&&(e[n]=t[n]);return e},overwriteNonObjects:function(t,e){for(let n in t)"object"!=typeof t[n]&&(e[n]=t[n])}};t.exports=n},function(t,e,n){const r=n(1),o=n(10),i=n(0),s=n(4),a={init:function(){this.extant_species={},this.extinct_species={},this.min_discard=10,this.record_size_limit=500},setEnv:function(t){this.env=t,this.setData()},addSpecies:function(t,e){var n=new o(t.anatomy,e,this.env.total_ticks);return this.extant_species[n.name]=n,t.species=n,n},addSpeciesObj:function(t){return this.extant_species[t.name]?(console.warn("Tried to add already existing species. Add failed."),void 0):this.extant_species[t.name]=t},changeSpeciesName:function(t,e){if(this.extant_species[e])return console.warn("Tried to change species name to an existing species name. Change failed."),void 0;delete this.extant_species[t.name],t.name=e,this.extant_species[t.name]=t},numExtantSpecies:function(){return Object.values(this.extant_species).length},numExtinctSpecies:function(){return Object.values(this.extinct_species).length},speciesIsExtant:function(t){return!!this.extant_species[t]},fossilize:function(t){return!!this.extant_species[t.name]&&(t.end_tick=this.env.total_ticks,t.ancestor=void 0,delete this.extant_species[t.name],t.cumulative_pop>=this.min_discard)},resurrect:function(t){t.extinct&&(t.extinct=!1,this.extant_species[t.name]=t,delete this.extinct_species[t.name])},setData:function(){this.tick_record=[],this.pop_counts=[],this.species_counts=[],this.av_mut_rates=[],this.av_cells=[],this.av_cell_counts=[],this.updateData()},updateData:function(){var t=this.env.total_ticks;for(this.tick_record.push(t),this.pop_counts.push(this.env.organisms.length),this.species_counts.push(this.numExtantSpecies()),this.av_mut_rates.push(this.env.averageMutability()),this.calcCellCountAverages();this.tick_record.length>this.record_size_limit;)this.tick_record.shift(),this.pop_counts.shift(),this.species_counts.shift(),this.av_mut_rates.shift(),this.av_cells.shift(),this.av_cell_counts.shift()},calcCellCountAverages:function(){var t=0,e={};for(let t of r.living)e[t.name]=0;var n=!0;for(let r of Object.values(this.extant_species)){if(!n&&this.numExtantSpecies()>10&&r.cumulative_pop<this.min_discard)continue;for(let t in r.cell_counts)e[t]+=r.cell_counts[t]*r.population;t+=r.population,n=!1}if(0==t)return this.av_cells.push(0),this.av_cell_counts.push(e),void 0;var o=0;for(let n in e)o+=e[n],e[n]/=t;this.av_cells.push(o/t),this.av_cell_counts.push(e)},getMostPopulousSpecies:function(){var t=0,e=void 0;for(let n of Object.values(this.extant_species))n.population>t&&(t=n.population,e=n);return e},clear_record:function(){this.extant_species=[],this.extinct_species=[],this.setData()},serialize:function(){this.updateData();let t=s.copyNonObjects(this);t.records={tick_record:this.tick_record,pop_counts:this.pop_counts,species_counts:this.species_counts,av_mut_rates:this.av_mut_rates,av_cells:this.av_cells,av_cell_counts:this.av_cell_counts};let e={};for(let n of Object.values(this.extant_species))e[n.name]=s.copyNonObjects(n),delete e[n.name].name;return t.species=e,t},loadRaw:function(t){s.overwriteNonObjects(t,this);for(let e in t.records)this[e]=t.records[e]}};a.init(),t.exports=a},function(t,e,n){const r=n(1),o=n(11),i=n(0),s=n(4),a=n(12),c=n(7),l=n(5),u=n(13);class d{constructor(t,e,n,i=null){this.c=t,this.r=e,this.env=n,this.lifetime=0,this.food_collected=0,this.living=!0,this.anatomy=new a(this),this.direction=o.down,this.rotation=o.up,this.can_rotate=c.rotationEnabled,this.move_count=0,this.move_range=4,this.ignore_brain_for=0,this.mutability=5,this.damage=0,this.brain=new u(this),null!=i&&this.inherit(i)}inherit(t){this.move_range=t.move_range,this.mutability=t.mutability,this.species=t.species;for(var e of t.anatomy.cells)this.anatomy.addInheritCell(e);t.anatomy.is_mover&&t.anatomy.has_eyes&&this.brain.copy(t.brain)}foodNeeded(){return this.anatomy.is_mover?this.anatomy.cells.length+c.extraMoverFoodCost:this.anatomy.cells.length}lifespan(){return this.anatomy.cells.length*c.lifespanMultiplier}maxHealth(){return this.anatomy.cells.length}reproduce(){var t=new d(0,0,this.env,this);c.rotationEnabled&&(t.rotation=o.getRandomDirection());var e=this.mutability;c.useGlobalMutability?e=c.globalMutability:Math.random()<=.5?t.mutability++:(t.mutability--,t.mutability<1&&(t.mutability=1));var n=!1;if(100*Math.random()<=e&&(n=t.anatomy.is_mover&&100*Math.random()<=10?t.anatomy.has_eyes?(t.brain.mutate(),t.move_range+=Math.floor(4*Math.random())-2,t.move_range<=0&&(t.move_range=1),!1):t.mutate():t.mutate()),o.getRandomScalar(),this.c,this.r,this.anatomy.birth_distance,this.c,this.r,this.isClear(this.c,this.r,t.rotation,!0)&&this.isStraightPath(this.c,this.r,this.c,this.r,this)&&this.env.canAddOrganism()){var r=o.getRandomScalar(),i=r[0],s=r[1],a=Math.floor(3*Math.random()),u=this.anatomy.birth_distance,p=this.c+i*u+i*a,h=this.r+s*u+s*a;this.isClear(p,h,t.rotation,!0)&&this.isStraightPath(p,h,this.c,this.r,this)&&this.env.canAddOrganism()&&(t.c=p,t.r=h,this.env.addOrganism(t),t.updateGrid(),n?l.addSpecies(t,this.species):t.species.addPop())}Math.max(this.food_collected-=this.foodNeeded(),0)}mutate(){let t=!1,e=!1,n=!1;if(this.calcRandomChance(c.addProb)){let e=this.anatomy.getRandomCell(),n=r.getRandomLivingType(),o=i.all[Math.floor(Math.random()*i.all.length)],s=e.loc_col+o[0],a=e.loc_row+o[1];this.anatomy.canAddCellAt(s,a)&&(t=!0,this.anatomy.addRandomizedCell(n,s,a))}if(this.calcRandomChance(c.changeProb)){let t=this.anatomy.getRandomCell(),n=r.getRandomLivingType();this.anatomy.replaceCell(n,t.loc_col,t.loc_row),e=!0}if(this.calcRandomChance(c.removeProb)&&this.anatomy.cells.length>1){let t=this.anatomy.getRandomCell();n=this.anatomy.removeCell(t.loc_col,t.loc_row)}return t||e||n}calcRandomChance(t){return 100*Math.random()<t}attemptMove(){var t=o.scalars[this.direction],e=t[0],n=t[1],r=this.c+e,i=this.r+n;if(this.isClear(r,i)){for(var s of this.anatomy.cells){var a=this.c+s.rotatedCol(this.rotation),c=this.r+s.rotatedRow(this.rotation);this.env.changeCell(a,c,r.empty,null)}return this.c=r,this.r=i,this.updateGrid(),!0}return!1}attemptRotate(){if(!this.can_rotate)return this.direction=o.getRandomDirection(),this.move_count=0,!0;var t=o.getRandomDirection();if(this.isClear(this.c,this.r,t)){for(var e of this.anatomy.cells){var n=this.c+e.rotatedCol(this.rotation),i=this.r+e.rotatedRow(this.rotation);this.env.changeCell(n,i,r.empty,null)}return this.rotation=t,this.direction=o.getRandomDirection(),this.updateGrid(),this.move_count=0,!0}return!1}changeDirection(t){this.direction=t,this.move_count=0}isStraightPath(t,e,n,r,o){if(t==n){if(e>r){var i=r;r=e,e=i}for(var s=e;s!=r;s++){var a=this.env.grid_map.cellAt(t,s);if(!this.isPassableCell(a,o))return!1}return!0}if(t>n){i=n;n=t,t=i}for(s=t;s!=n;s++){a=this.env.grid_map.cellAt(s,e);if(!this.isPassableCell(a,o))return!1}return!0}isPassableCell(t,e){return null!=t&&(t.state==r.empty||t.owner==this||t.owner==e||t.state==r.food)}isClear(t,e,n=this.rotation){for(var o of this.anatomy.cells){var i=this.getRealCell(o,t,e,n);if(null==i)return!1;if(i.owner==this||i.state==r.empty||!c.foodBlocksReproduction&&i.state==r.food)continue;return!1}return!0}harm(){this.damage++,this.damage>=this.maxHealth()&&!c.instaKill||this.die()}die(){for(var t of this.anatomy.cells){var e=this.c+t.rotatedCol(this.rotation),n=this.r+t.rotatedRow(this.rotation);this.env.changeCell(e,n,r.food,null)}this.species.decreasePop(),this.living=!1}updateGrid(){for(var t of this.anatomy.cells){var e=this.c+t.rotatedCol(this.rotation),n=this.r+t.rotatedRow(this.rotation);this.env.changeCell(e,n,t.state,t)}}update(){if(this.lifetime++,this.lifetime>this.lifespan())return this.die(),this.living;if(this.food_collected>=this.foodNeeded()&&this.reproduce(),this.anatomy.cells.forEach(t=>{t.performFunction(),this.living&&void 0}),!this.living)return this.living;if(this.anatomy.is_mover){this.move_count++;var t=!1;0==this.ignore_brain_for?t=this.brain.decide():this.ignore_brain_for--;var e=this.attemptMove();if(this.move_count>this.move_range&&!t||!e){var n=this.attemptRotate();n||(this.changeDirection(o.getRandomDirection()),t&&(this.ignore_brain_for=this.move_range+1))}}return this.living}getRealCell(t,e=this.c,n=this.r,r=this.rotation){var o=e+t.rotatedCol(r),i=n+t.rotatedRow(r);return this.env.grid_map.cellAt(o,i)}isNatural(){let t=!1;if(0===this.anatomy.cells.length)return!1;for(let e=0;e<this.anatomy.cells.length;e++){let n=this.anatomy.cells[e];for(let t=e+1;t<this.anatomy.cells.length;t++){let r=this.anatomy.cells[t];if(n.loc_col===r.loc_col&&n.loc_row===r.loc_row)return!1}0===n.loc_col&&0===n.loc_row&&(t=!0)}return t}serialize(){let t=s.copyNonObjects(this);return t.anatomy=this.anatomy.serialize(),this.anatomy.is_mover&&this.anatomy.has_eyes&&(t.brain=this.brain.serialize()),t.species_name=this.species.name,t}loadRaw(t){s.overwriteNonObjects(t,this),this.anatomy.loadRaw(t.anatomy),t.brain&&this.brain.copy(t.brain)}}t.exports=d},function(t,e,n){const r=n(0),o={setDefaults:function(){this.lifespanMultiplier=100,this.foodProdProb=5,this.killableNeighbors=r.adjacent,this.edibleNeighbors=r.adjacent,this.growableNeighbors=r.adjacent,this.useGlobalMutability=!1,this.globalMutability=5,this.addProb=33,this.changeProb=33,this.removeProb=33,this.rotationEnabled=!0,this.foodBlocksReproduction=!0,this.moversCanProduce=!1,this.instaKill=!1,this.lookRange=20,this.seeThroughSelf=!1,this.foodDropProb=0,this.extraMoverFoodCost=0,this.maxOrganisms=-1},loadJsonObj(t){for(const e in t)Object.prototype.hasOwnProperty.call(this,e)&&(this[e]=t[e])}};o.setDefaults(),t.exports=o},function(t,e,n){const r=n(1),o=n(14),i=n(15),s=n(16),a=n(17),c=n(18),l=n(19),u={createDefault:function(t,e,n,i){switch(e){case r.mouth:return new o(t,n,i);case r.producer:return new s(t,n,i);case r.mover:return new a(t,n,i);case r.killer:return new i(t,n,i);case r.armor:return new c(t,n,i);case r.eye:return new l(t,n,i)}},createRandom:function(t,e,n,i){let d=this.createDefault(t,e,n,i);return d.randomize(),d},createInherited:function(t,e){let n=e.state;e.state.name&&(n=r[e.state.name]);let i=this.createDefault(t,n,e.loc_col,e.loc_row);return i.relative_rotation=e.relative_rotation,i.connections=e.connections,i}};t.exports=u},function(t,e){class n{constructor(t,e,n,r){this.owner=t,this.state=e,this.loc_col=n,this.loc_row=r,this.relative_rotation=0,this.connections=[]}rotatedCol(t){let e=this.loc_col,n=this.loc_row;switch(t){case 0:break;case 1:e=-this.loc_col,n=-this.loc_row;break;case 2:e=this.loc_row,n=-this.loc_col;break;case 3:e=-this.loc_row,n=this.loc_col}return e}rotatedRow(t){let e=this.loc_col,n=this.loc_row;switch(t){case 0:break;case 1:e=-this.loc_col,n=-this.loc_row;break;case 2:e=this.loc_row,n=-this.loc_col;break;case 3:e=-this.loc_row,n=this.loc_col}return n}performFunction(){}randomize(){}}t.exports=n},function(t,e,n){const r=n(1);let o;const i=()=>(o||(o=n(5)),o);class s{constructor(t,e,n){this.anatomy=t,this.ancestor=e,this.population=1,this.cumulative_pop=1,this.start_tick=n,this.end_tick=-1,this.name=Math.random().toString(36).slice(2,12),this.extinct=!1,this.calcAnatomyDetails()}calcAnatomyDetails(){if(!this.anatomy)return;const t=Object.fromEntries(r.living.map(t=>[t.name,0]));this.cell_counts=this.anatomy.cells.reduce((e,n)=>(e.hasOwnProperty(n.state.name)&&e[n.state.name]++,e),t)}addPop(){this.population++,this.cumulative_pop++}decreasePop(){this.population--,this.population<=0&&(this.extinct=!0,i().fossilize(this))}lifespan(){return this.end_tick-this.start_tick}}t.exports=s},function(t,e){const n={up:0,down:1,left:2,right:3,getRandomDirection:function(){return Math.floor(4*Math.random())},getRandomScalar:function(){return this.scalars[this.getRandomDirection()]},getOppositeDirection:function(t){switch(t){case this.up:return this.down;case this.down:return this.up;case this.left:return this.right;case this.right:return this.left}},scalars:[[0,-1],[0,1],[-1,0],[1,0]]};t.exports=n},function(t,e,n){const r=n(1),o=n(8),i=n(0),s=n(4);class a{constructor(t){this.owner=t,this.birth_distance=4,this.clear()}clear(){this.cells=[],this.is_producer=!1,this.is_mover=!1,this.has_eyes=!1}canAddCellAt(t,e){for(var n of this.cells)if(n.loc_col==t&&n.loc_row==e)return!1;return!0}addDefaultCell(t,e,n){var r=o.createDefault(this.owner,t,e,n);return this.cells.push(r),r}addRandomizedCell(t,e,n){t==r.eye&&!this.has_eyes&&this.owner.brain.randomizeDecisions();var i=o.createRandom(this.owner,t,e,n);return this.cells.push(i),i}addInheritCell(t){var e=o.createInherited(this.owner,t);return this.cells.push(e),e}replaceCell(t,e,n,r=!0){return this.removeCell(e,n,!0),r?this.addRandomizedCell(t,e,n):this.addDefaultCell(t,e,n)}removeCell(t,e,n=!1){if(0==t&&0==e&&!n)return!1;const r=this.cells.findIndex(n=>n.loc_col===t&&n.loc_row===e);return r>-1&&this.cells.splice(r,1),this.checkTypeChange(),!0}getLocalCell(t,e){return this.cells.find(n=>n.loc_col===t&&n.loc_row===e)||null}checkTypeChange(){this.is_producer=!1,this.is_mover=!1,this.has_eyes=!1;for(var t of this.cells)t.state==r.producer?this.is_producer=!0:t.state==r.mover?this.is_mover=!0:t.state==r.eye&&(this.has_eyes=!0)}getRandomCell(){return this.cells[Math.floor(Math.random()*this.cells.length)]}getNeighborsOfCell(t,e){return i.all.map(([n,r])=>this.getLocalCell(t+n,e+r)).filter(t=>null!==t)}isEqual(t){if(this.cells.length!==t.cells.length)return!1;for(let e in this.cells){let n=this.cells[e],r=t.cells[e];if(n.loc_col!==r.loc_col||n.loc_row!==r.loc_row||n.state!==r.state)return!1}return!0}serialize(){let t=s.copyNonObjects(this);t.cells=[];for(let e of this.cells){let n=s.copyNonObjects(e);n.state={name:e.state.name},t.cells.push(n)}return t}loadRaw(t){this.clear();for(let e of t.cells)this.addInheritCell(e)}}t.exports=a},function(t,e,n){const r=n(3),o=n(2),i=n(1),s={neutral:0,retreat:1,chase:2,getRandom:function(){return Math.floor(3*Math.random())},getRandomNonNeutral:function(){return Math.floor(2*Math.random())+1}};class a{constructor(t){this.owner=t,this.observations=[],this.decisions=Object.fromEntries(i.all.map(t=>[t.name,s.neutral])),this.decisions[i.food.name]=s.chase,this.decisions[i.killer.name]=s.retreat}copy(t){for(let e in t.decisions)this.decisions[e]=t.decisions[e]}randomizeDecisions(t=!1){t&&(this.decisions[i.food.name]=s.getRandom(),this.decisions[i.killer.name]=s.getRandom()),this.decisions[i.mouth.name]=s.getRandom(),this.decisions[i.producer.name]=s.getRandom(),this.decisions[i.mover.name]=s.getRandom(),this.decisions[i.armor.name]=s.getRandom(),this.decisions[i.eye.name]=s.getRandom()}observe(t){this.observations.push(t)}decide(){var t=s.neutral,e=r.lookRange+1,n=0;for(var i of this.observations)null!=i.cell&&i.cell.owner!=this.owner&&i.distance<e&&(t=this.decisions[i.cell.state.name],n=i.direction,e=i.distance);return this.observations=[],t==s.chase?(this.owner.changeDirection(n),!0):t==s.retreat?(this.owner.changeDirection(o.getOppositeDirection(n)),!0):!1}mutate(){this.decisions[i.getRandomName()]=s.getRandom(),this.decisions[i.empty.name]=s.neutral}serialize(){return{decisions:this.decisions}}}a.Decision=s,t.exports=a},function(t,e,n){const r=n(9),o=n(1),i=n(3);class s extends r{constructor(t,e,n){super(t,o.mouth,e,n)}performFunction(){for(var t of i.edibleNeighbors){var e=this.owner.getRealCell({rotatedCol:t=>t[0]+this.rotatedCol(t),rotatedRow:t=>t[1]+this.rotatedRow(t)});e&&e.state==o.food&&(this.owner.food_collected++,this.owner.env.changeCell(e.c,e.r,o.empty,null))}}}t.exports=s},function(t,e,n){const r=n(9),o=n(1),i=n(3);class s extends r{constructor(t,e,n){super(t,o.killer,e,n)}performFunction(){for(var t of i.killableNeighbors){var e=this.owner.getRealCell({rotatedCol:t=>t[0]+this.rotatedCol(t),rotatedRow:t=>t[1]+this.rotatedRow(t)});e&&e.owner&&e.owner!=this.owner&&e.owner.harm()}}}t.exports=s},function(t,e,n){const r=n(9),o=n(1),i=n(3);class s extends r{constructor(t,e,n){super(t,o.producer,e,n)}performFunction(){if((this.owner.anatomy.is_mover||!i.moversCanProduce)&&this.owner.anatomy.is_mover)return;if(100*Math.random()<i.foodProdProb)for(var t of i.growableNeighbors){var e=this.owner.getRealCell({rotatedCol:t=>t[0]+this.rotatedCol(t),rotatedRow:t=>t[1]+this.rotatedRow(t)});e&&e.state==o.empty&&this.owner.env.changeCell(e.c,e.r,o.food,null)}}}t.exports=s},function(t,e,n){const r=n(9),o=n(1);class i extends r{constructor(t,e,n){super(t,o.mover,e,n)}}t.exports=i},function(t,e,n){const r=n(9),o=n(1);class i extends r{constructor(t,e,n){super(t,o.armor,e,n)}performFunction(){for(var t of this.owner.anatomy.getNeighborsOfCell(this.loc_col,this.loc_row))t.state==o.killer&&this.owner.anatomy.replaceCell(o.armor,t.loc_col,t.loc_row,!1)}}t.exports=i},function(t,e,n){const r=n(9),o=n(1),i=n(3),s=n(2),a=n(20);class c extends r{constructor(t,e,n){super(t,o.eye,e,n)}performFunction(){if(this.owner.anatomy.is_mover)for(var t of i.seeThroughSelf?this.owner.anatomy.cells:this.owner.anatomy.getNeighborsOfCell(this.loc_col,this.loc_row)){var e=this.owner.getRealCell(t);if(e){var n=this.owner.getRealCell({rotatedCol:t=>this.rotatedCol(t),rotatedRow:t=>this.rotatedRow(t)}),r=this.owner.env.grid_map.cellAt(n.c,n.r-1),o=this.owner.env.grid_map.cellAt(n.c,n.r+1),c=this.owner.env.grid_map.cellAt(n.c-1,n.r),l=this.owner.env.grid_map.cellAt(n.c+1,n.r);r&&this.owner.brain.observe(new a(r,s.up,1)),o&&this.owner.brain.observe(new a(o,s.down,1)),c&&this.owner.brain.observe(new a(c,s.left,1)),l&&this.owner.brain.observe(new a(l,s.right,1))}}}}t.exports=c},function(t,e){class n{constructor(t,e,n){this.cell=t,this.direction=e,this.distance=n}}t.exports=n},function(t,e,n){const r=n(1),o=n(22);class i{constructor(t,e,n){this.grid=[],this.cols=t,this.rows=e,this.cell_size=n;for(var i=0;i<this.cols;i++){this.grid[i]=[];for(var s=0;s<this.rows;s++)this.grid[i][s]=new o(i,s,r.empty,null)}this.is_fill=!1}cellAt(t,e){return t<0||t>=this.cols||e<0||e>=this.rows?null:this.grid[t][e]}changeCell(t,e,n,i){var s=this.cellAt(t,e);return null!=s&&(s.state=n,s.owner=i,s.color=n.color,s.is_living=n.is_living,s.is_organism=null!=i,!0)}fillWindow(){this.is_fill=!0,this.cols=Math.floor(window.innerWidth/this.cell_size),this.rows=Math.floor(window.innerHeight/this.cell_size),this.grid=[];for(var t=0;t<this.cols;t++){this.grid[t]=[];for(var e=0;e<this.rows;e++)this.grid[t][e]=new o(t,e,r.empty,null)}}serialize(){let t={};t.cols=this.cols,t.rows=this.rows,t.cell_size=this.cell_size;let e=[];for(let n=0;n<this.cols;n++)for(let r=0;r<this.rows;r++){let o=this.cellAt(n,r);o.state!=o.empty&&e.push({c:n,r:r,state_name:o.state.name})}return t.cells=e,t}loadRaw(t){this.cols=t.cols,this.rows=t.rows,this.cell_size=t.cell_size;for(var e=0;e<this.cols;e++){this.grid[e]=[];for(var n=0;n<this.rows;n++)this.grid[e][n]=new o(e,n,r.empty,null)}for(let e of t.cells)this.changeCell(e.c,e.r,r[e.state_name],null)}}t.exports=i},function(t,e){class n{constructor(t,e,n,r){this.c=t,this.r=e,this.state=n,this.owner=r,this.color=n.color,this.is_living=n.is_living,this.is_organism=null!=r}}t.exports=n},function(t,e,n){const r=n(1),o=n(21),i=n(6),s=n(5),a=n(3),c=n(4),l=n(24);class u{constructor(t,e,n){this.organisms=[],this.grid_map=new o(t,e,n),this.total_ticks=0,this.auto_reset=!0,this.auto_pause=!1,this.reset_count=0,this.clear_walls_on_reset=!1,s.setEnv(this)}addOrganism(t){this.organisms.push(t)}canAddOrganism(){return-1==a.maxOrganisms||this.organisms.length<a.maxOrganisms}changeCell(t,e,n,r){this.grid_map.changeCell(t,e,n,r)}averageMutability(){if(0==this.organisms.length)return 0;var t=0;for(var e of this.organisms)t+=e.mutability;return t/this.organisms.length}clear(){this.organisms=[],this.grid_map=new o(this.grid_map.cols,this.grid_map.rows,this.grid_map.cell_size),s.clear_record()}reset(){this.clear();let t=new i(Math.floor(this.grid_map.cols/2),Math.floor(this.grid_map.rows/2),this);t.anatomy.addDefaultCell(r.producer,0,0),this.addOrganism(t),s.addSpecies(t,null),t.updateGrid()}resetWith(t){this.clear();let e=new i(Math.floor(this.grid_map.cols/2),Math.floor(this.grid_map.rows/2),this);e.loadRaw(t),this.addOrganism(e),s.addSpecies(e,null),e.updateGrid()}resetWithRandom(t){this.clear();for(let e=0;e<t;e++){let t=Math.floor(Math.random()*this.grid_map.cols),n=Math.floor(Math.random()*this.grid_map.rows),o=new i(t,n,this);o.anatomy.addDefaultCell(r.getRandomLivingType(),0,0),this.addOrganism(o),s.addSpecies(o,null),o.updateGrid()}}generateRandomWalls(){for(let t=0;t<this.grid_map.cols;t++)for(let e=0;e<this.grid_map.rows;e++)100*Math.random()<10&&this.changeCell(t,e,r.wall,null)}clearWalls(){for(let t=0;t<this.grid_map.cols;t++)for(let e=0;e<this.grid_map.rows;e++)this.grid_map.cellAt(t,e).state==r.wall&&this.changeCell(t,e,r.empty,null)}update(){if(this.total_ticks++,s.updateData(),0!=a.foodDropProb&&100*Math.random()<a.foodDropProb){let t=Math.floor(Math.random()*this.grid_map.cols),e=Math.floor(Math.random()*this.grid_map.rows);this.changeCell(t,e,r.food,null)}for(var t=this.organisms.length-1;t>=0;t--){var e=this.organisms[t];e.update()||this.organisms.splice(t,1)}if(0==this.organisms.length){if(this.auto_reset)return this.reset_count++,this.clear_walls_on_reset&&this.clearWalls(),this.reset(),!0;if(this.auto_pause)return!1}return!0}serialize(){let t=c.copyNonObjects(this);t.hyperparameters=a;let e=[];for(let n of this.organisms)e.push(n.serialize());return t.organisms=e,t.fossil_record=s.serialize(),t}load(t){this.clear(),c.overwriteNonObjects(t,this),a.loadJsonObj(t.hyperparameters),s.loadRaw(t.fossil_record);for(let e of t.organisms){let n=new i(e.c,e.r,this);n.loadRaw(e);let r=s.speciesIsExtant(e.species_name)?s.extant_species[e.species_name]:new l(n.anatomy,null,0);r.name=e.species_name,s.addSpeciesObj(r),n.species=r,this.addOrganism(n)}this.updateGrid()}}t.exports=u},function(t,e,n){const r=n(1);let o;const i=()=>(o||(o=n(5)),o);class s{constructor(t,e,n){this.anatomy=t,this.ancestor=e,this.population=1,this.cumulative_pop=1,this.start_tick=n,this.end_tick=-1,this.name=Math.random().toString(36).substr(2,10),this.extinct=!1,this.calcAnatomyDetails()}calcAnatomyDetails(){if(!this.anatomy)return;var t={};for(let e of r.living)t[e.name]=0;for(let e of this.anatomy.cells)t[e.state.name]+=1;this.cell_counts=t}addPop(){this.population++,this.cumulative_pop++}decreasePop(){this.population--,this.population<=0&&(this.extinct=!0,i().fossilize(this))}lifespan(){return this.end_tick-this.start_tick}}t.exports=s},function(t,e,n){const r=n(26),o=n(27),i=n(28),s=n(29),a=n(30),c=n(31),l=n(32),u=n(33),d=n(34),p=n(35),h=n(36),f=n(37),m=n(38),g=n(39),v=n(40),b=n(41),y=n(42),C=n(43),w=n(44);class S{constructor(t,e,n,i){this.env=t,this.env_canvas=e,this.editor_canvas=n,this.editor=i,this.is_dragging=!1,this.drag_start={x:0,y:0},this.camera_offset={x:0,y:0},this.camera_zoom=1,this.MAX_ZOOM=20,this.MIN_ZOOM=.1,this.SCROLL_SENSITIVITY=.005,this.brush_size=2,this.setupCanvas(),this.setupUI(),this.resize(),window.addEventListener("resize",()=>this.resize())}setupCanvas(){this.env_ctx=this.env_canvas.getContext("2d"),this.editor_ctx=this.editor_canvas.getContext("2d"),this.env_canvas.addEventListener("mousedown",t=>this.onPointerDown(t)),this.env_canvas.addEventListener("mouseup",t=>this.onPointerUp(t)),this.env_canvas.addEventListener("mousemove",t=>this.onPointerMove(t)),this.env_canvas.addEventListener("wheel",t=>this.adjustZoom(t.deltaY*this.SCROLL_SENSITIVITY))}setupUI(){this.fps_p=new r,this.fps_actual_p=new o,this.reset_btn=new i(this.env),this.clear_btn=new s(this.env),this.brush_slider=new a(this),this.tab_bar=new c(this),this.about_tab=new l,this.editor_tab=new u(this.editor),this.world_controls_tab=new d(this.env,this),this.hyper_tab=new p(this.env),this.stats_tab=new h(this.env),this.load_panel=new f(this.editor),this.community_btn=new m(this.load_panel),this.hot_controls=new g(this.env),this.headless_notification=new v,this.maximize_hot_control=new b(this.tab_bar),this.speed_controller=new y(this.env),this.edit_mode_btns=new C(this.editor),this.reset_view_btn=new w(this)}onPointerDown(t){this.editor.drag_view?this.drag_start={x:t.clientX-this.camera_offset.x,y:t.clientY-this.camera_offset.y}:this.drag_start={x:t.clientX/this.camera_zoom-this.camera_offset.x,y:t.clientY/this.camera_zoom-this.camera_offset.y},this.is_dragging=!0}onPointerUp(t){this.is_dragging=!1,this.editor.drag_view||(this.drag_start.x=t.clientX/this.camera_zoom-this.camera_offset.x,this.drag_start.y=t.clientY/this.camera_zoom-this.camera_offset.y,this.editor.interact(this.drag_start.x,this.drag_start.y))}onPointerMove(t){this.is_dragging&&(this.editor.drag_view?(this.camera_offset.x=t.clientX-this.drag_start.x,this.camera_offset.y=t.clientY-this.drag_start.y):(this.drag_start.x=t.clientX/this.camera_zoom-this.camera_offset.x,this.drag_start.y=t.clientY/this.camera_zoom-this.camera_offset.y,this.editor.interact(this.drag_start.x,this.drag_start.y)))}adjustZoom(t){this.camera_zoom-=t;var e=Math.min(this.camera_zoom,this.MAX_ZOOM);this.camera_zoom=Math.max(e,this.MIN_ZOOM)}resize(){this.env.grid_map.is_fill&&(this.env.grid_map.fillWindow(),this.env.reset()),this.env_canvas.width=this.env.grid_map.cols*this.env.grid_map.cell_size,this.env_canvas.height=this.env.grid_map.rows*this.env.grid_map.cell_size,this.editor_canvas.width=195,this.editor_canvas.height=195}drawGame(){this.env_ctx.save(),this.env_ctx.translate(this.camera_offset.x,this.camera_offset.y),this.env_ctx.scale(this.camera_zoom,this.camera_zoom),this.env_ctx.clearRect(0,0,this.env_canvas.width,this.env_canvas.height),this.drawGrid(),this.env_ctx.restore()}drawGrid(){for(var t=0;t<this.env.grid_map.cols;t++)for(var e=0;e<this.env.grid_map.rows;e++){var n=this.env.grid_map.cellAt(t,e);this.env_ctx.fillStyle=n.color,this.env_ctx.fillRect(t*this.env.grid_map.cell_size,e*this.env.grid_map.cell_size,this.env.grid_map.cell_size,this.env.grid_map.cell_size)}}drawEditor(){this.editor_ctx.clearRect(0,0,this.editor_canvas.width,this.editor_canvas.height);var t=this.editor_canvas.width/2,e=this.editor_canvas.height/2,n=15;for(var r of this.editor.organism.anatomy.cells){var o=r.loc_col,i=r.loc_row;this.editor_ctx.fillStyle=r.state.color,this.editor_ctx.fillRect(t+o*n,e+i*n,n,n)}}}t.exports=S},function(t,e){class n{constructor(){this.p=document.getElementById("fps"),this.slider=document.getElementById("slider"),this.slider.addEventListener("input",()=>this.update())}update(){this.p.innerHTML="Target FPS: "+this.slider.value}}t.exports=n},function(t,e){class n{constructor(){this.p=document.getElementById("fps-actual")}update(t){this.p.innerHTML="Actual FPS: "+t}}t.exports=n},function(t,e){class n{constructor(t){this.env=t,this.btn=document.getElementById("reset-env"),this.btn.addEventListener("click",()=>this.env.reset())}}t.exports=n},function(t,e){class n{constructor(t){this.env=t,this.btn=document.getElementById("clear-env"),this.btn.addEventListener("click",()=>this.env.clear())}}t.exports=n},function(t,e){class n{constructor(t){this.renderer=t,this.slider=document.getElementById("brush-slider"),this.slider.addEventListener("input",()=>this.update())}update(){this.renderer.brush_size=this.slider.value}}t.exports=n},function(t,e){class n{constructor(t){this.renderer=t,this.panel=document.querySelector(".control-panel"),this.min_btn=document.getElementById("minimize"),this.max_btn=document.getElementById("maximize"),this.max_btn_cont=document.getElementById("maximize-hot-control"),this.min_btn.addEventListener("click",()=>this.minimize()),this.max_btn.addEventListener("click",()=>this.maximize()),this.setupTabs()}setupTabs(){this.tab_btns=document.querySelectorAll(".tabnav-item"),this.tabs=document.querySelectorAll(".tab"),this.tab_btns.forEach(t=>{t.addEventListener("click",()=>this.openTab(t.id.replace("-btn","")))})}openTab(t){this.tabs.forEach(e=>{e.id==t?e.style.display="grid":e.style.display="none"}),this.tab_btns.forEach(e=>{e.id.replace("-btn","")==t?e.classList.add("open-tab"):e.classList.remove("open-tab")})}minimize(){this.panel.style.display="none",this.max_btn_cont.style.display="block"}maximize(){this.panel.style.display="grid",this.max_btn_cont.style.display="none"}}t.exports=n},function(t,e){class n{constructor(){this.video=document.getElementById("video")}resize(){this.video.height=this.video.parentElement.clientHeight-50}}t.exports=n},function(t,e,n){const r=n(1);class o{constructor(t){this.editor=t,this.panel=document.getElementById("editor"),this.canvas=document.getElementById("editor-canvas"),this.cell_selections=document.getElementById("cell-selections"),this.clear_btn=document.getElementById("clear-editor"),this.random_btn=document.getElementById("generate-random"),this.organism_details=document.getElementById("organism-details"),this.edit_organism_details=document.getElementById("edit-organism-details"),this.species_name_p=this.organism_details.querySelector(".species-name"),this.cell_count_p=this.organism_details.querySelector(".cell-count"),this.move_range_p=this.organism_details.querySelector("#move-range"),this.mutation_rate_p=this.organism_details.querySelector("#mutation-rate"),this.chase_p=this.organism_details.querySelector(".chase-types"),this.retreat_p=this.organism_details.querySelector(".retreat-types"),this.edit_species_name_in=this.edit_organism_details.querySelector("#species-name-edit"),this.edit_cell_count_p=this.edit_organism_details.querySelector(".cell-count"),this.edit_move_range_in=this.edit_organism_details.querySelector("#move-range-edit"),this.edit_mutation_rate_in=this.edit_organism_details.querySelector("#mutation-rate-edit"),this.edit_chase_p=this.edit_organism_details.querySelector(".chase-types"),this.edit_retreat_p=this.edit_organism_details.querySelector(".retreat-types"),this.observation_in=this.edit_organism_details.querySelector("#observation-type-edit"),this.reaction_in=this.edit_organism_details.querySelector("#reaction-edit"),this.unnatural_warning=document.getElementById("unnatural-org-warning"),this.clear_btn.addEventListener("click",()=>this.editor.clear()),this.random_btn.addEventListener("click",()=>this.editor.generateRandom()),this.edit_species_name_in.addEventListener("input",()=>this.updateOrganism()),this.edit_move_range_in.addEventListener("input",()=>this.updateOrganism()),this.edit_mutation_rate_in.addEventListener("input",()=>this.updateOrganism()),this.observation_in.addEventListener("change",()=>this.updateBrain()),this.reaction_in.addEventListener("change",()=>this.updateBrain()),this.setupCellSelections()}setupCellSelections(){for(let t of r.living){let e=document.getElementById(t.name);e.style.backgroundColor=t.color,e.addEventListener("click",()=>this.editor.setBuildCellType(t))}}update(){this.editor.organism?(this.cell_selections.style.display="grid",this.organism_details.style.display="block",this.species_name_p.innerHTML="Species Name: "+this.editor.organism.species.name,this.cell_count_p.innerHTML="Cell count: "+this.editor.organism.anatomy.cells.length,this.move_range_p.innerHTML="Move Range: "+this.editor.organism.move_range,this.mutation_rate_p.innerHTML="Mutation Rate: "+this.editor.organism.mutability,this.chase_p.innerHTML="Move Towards: "+this.getBrainTypes(2),this.retreat_p.innerHTML="Move Away From: "+this.getBrainTypes(1),this.editor.organism.isNatural()?this.unnatural_warning.style.display="none":this.unnatural_warning.style.display="inline-block",this.editor.is_editing?(this.edit_organism_details.style.display="block",this.organism_details.style.display="none",this.edit_species_name_in.value=this.editor.organism.species.name,this.edit_cell_count_p.innerHTML="Cell count: "+this.editor.organism.anatomy.cells.length,this.edit_move_range_in.value=this.editor.organism.move_range,this.edit_mutation_rate_in.value=this.editor.organism.mutability,this.edit_chase_p.innerHTML="Move Towards: "+this.getBrainTypes(2),this.edit_retreat_p.innerHTML="Move Away From: "+this.getBrainTypes(1),this.updateBrain()):this.edit_organism_details.style.display="none"):(this.cell_selections.style.display="none",this.organism_details.style.display="none",this.edit_organism_details.style.display="none",this.unnatural_warning.style.display="none")}updateOrganism(){this.editor.organism.species.name=this.edit_species_name_in.value,this.editor.organism.move_range=parseInt(this.edit_move_range_in.value),this.editor.organism.mutability=parseInt(this.edit_mutation_rate_in.value),this.update()}updateBrain(){let t=this.observation_in.value;this.editor.organism.brain.decisions[t]=parseInt(this.reaction_in.value),this.update()}getBrainTypes(t){let e="";for(let n in this.editor.organism.brain.decisions)this.editor.organism.brain.decisions[n]==t&&(e+=n+" ");return e}}t.exports=o},function(t,e,n){const r=n(3);class o{constructor(t,e){this.env=t,this.renderer=e,this.cell_size_in=document.getElementById("cell-size"),this.fill_window_check=document.getElementById("fill-window"),this.col_in=document.getElementById("col-input"),this.row_in=document.getElementById("row-input"),this.col_row_cont=document.querySelector(".col-row-input"),this.resize_btn=document.getElementById("resize"),this.auto_reset_check=document.getElementById("auto-reset"),this.auto_pause_check=document.getElementById("auto-pause"),this.reset_count_p=document.getElementById("reset-count"),this.reset_random_btn=document.querySelector(".reset-random"),this.num_random_in=document.getElementById("num-random-orgs"),this.random_walls_btn=document.getElementById("random-walls"),this.clear_walls_btn=document.getElementById("clear-walls"),this.clear_walls_reset_check=document.getElementById("clear-walls-reset"),this.save_env_btn=document.getElementById("save-env"),this.save_env_name_in=document.getElementById("save-env-name"),this.load_env_btn=document.getElementById("load-env"),this.override_controls_check=document.getElementById("override-controls"),this.upload_el=document.getElementById("upload-json"),this.cell_size_in.addEventListener("input",()=>this.update()),this.fill_window_check.addEventListener("change",()=>this.update()),this.col_in.addEventListener("input",()=>this.update()),this.row_in.addEventListener("input",()=>this.update()),this.resize_btn.addEventListener("click",()=>this.resize()),this.auto_reset_check.addEventListener("change",()=>this.update()),this.auto_pause_check.addEventListener("change",()=>this.update()),this.reset_random_btn.addEventListener("click",()=>this.env.resetWithRandom(this.num_random_in.value)),this.random_walls_btn.addEventListener("click",()=>this.env.generateRandomWalls()),this.clear_walls_btn.addEventListener("click",()=>this.env.clearWalls()),this.clear_walls_reset_check.addEventListener("change",()=>this.update()),this.save_env_btn.addEventListener("click",()=>this.save()),this.load_env_btn.addEventListener("click",()=>this.upload_el.click()),this.upload_el.addEventListener("change",t=>this.load(t)),this.update()}update(){this.env.grid_map.cell_size=parseInt(this.cell_size_in.value),this.env.grid_map.is_fill=this.fill_window_check.checked,this.env.grid_map.is_fill?this.col_row_cont.style.display="none":this.col_row_cont.style.display="block",this.env.grid_map.cols=parseInt(this.col_in.value),this.env.grid_map.rows=parseInt(this.row_in.value),this.env.auto_reset=this.auto_reset_check.checked,this.env.auto_pause=this.auto_pause_check.checked,this.env.clear_walls_on_reset=this.clear_walls_reset_check.checked,this.reset_count_p.innerHTML="Auto reset count: "+this.env.reset_count}resize(){this.renderer.resize(),this.env.reset()}save(){let t=this.env.serialize(),e=JSON.stringify(t),n=new Blob([e],{type:"application/json"}),r=URL.createObjectURL(n),o=document.createElement("a");o.href=r,o.download=this.save_env_name_in.value+".json",o.click()}load(t){let e=t.target.files[0];if(e){let t=new FileReader;t.onload=t=>{let e=JSON.parse(t.target.result);this.env.load(e),this.override_controls_check.checked&&r.loadJsonObj(e.hyperparameters),this.renderer.resize()},t.readAsText(e)}}}t.exports=o},function(t,e,n){const r=n(3);class o{constructor(t){this.env=t,this.food_prod_prob_in=document.getElementById("food-prod-prob"),this.lifespan_multiplier_in=document.getElementById("lifespan-multiplier"),this.rot_enabled_check=document.getElementById("rot-enabled"),this.insta_kill_check=document.getElementById("insta-kill"),this.look_range_in=document.getElementById("look-range"),this.see_through_self_check=document.getElementById("see-through-self"),this.food_drop_rate_in=document.getElementById("food-drop-rate"),this.extra_mover_cost_in=document.getElementById("extra-mover-cost"),this.reset_rules_btn=document.getElementById("reset-rules"),this.org_limit_in=document.getElementById("org-limit"),this.evolved_mutation_check=document.getElementById("evolved-mutation"),this.global_mutation_cont=document.querySelector(".global-mutation-container"),this.global_mutation_in=document.getElementById("global-mutation"),this.add_prob_in=document.getElementById("add-prob"),this.change_prob_in=document.getElementById("change-prob"),this.remove_prob_in=document.getElementById("remove-prob"),this.movers_produce_check=document.getElementById("movers-produce"),this.food_blocks_check=document.getElementById("food-blocks"),this.save_controls_btn=document.getElementById("save-controls"),this.load_controls_btn=document.getElementById("load-controls"),this.download_el=document.getElementById("download-el"),this.upload_el=document.getElementById("upload-hyperparams"),this.food_prod_prob_in.addEventListener("input",()=>this.update()),this.lifespan_multiplier_in.addEventListener("input",()=>this.update()),this.rot_enabled_check.addEventListener("change",()=>this.update()),this.insta_kill_check.addEventListener("change",()=>this.update()),this.look_range_in.addEventListener("input",()=>this.update()),this.see_through_self_check.addEventListener("change",()=>this.update()),this.food_drop_rate_in.addEventListener("input",()=>this.update()),this.extra_mover_cost_in.addEventListener("input",()=>this.update()),this.reset_rules_btn.addEventListener("click",()=>this.reset()),this.org_limit_in.addEventListener("input",()=>this.update()),this.evolved_mutation_check.addEventListener("change",()=>this.update()),this.global_mutation_in.addEventListener("input",()=>this.update()),this.add_prob_in.addEventListener("input",()=>this.update()),this.change_prob_in.addEventListener("input",()=>this.update()),this.remove_prob_in.addEventListener("input",()=>this.update()),this.movers_produce_check.addEventListener("change",()=>this.update()),this.food_blocks_check.addEventListener("change",()=>this.update()),this.save_controls_btn.addEventListener("click",()=>this.save()),this.load_controls_btn.addEventListener("click",()=>this.upload_el.click()),this.upload_el.addEventListener("change",t=>this.load(t)),this.update()}update(){r.foodProdProb=parseInt(this.food_prod_prob_in.value),r.lifespanMultiplier=parseInt(this.lifespan_multiplier_in.value),r.rotationEnabled=this.rot_enabled_check.checked,r.instaKill=this.insta_kill_check.checked,r.lookRange=parseInt(this.look_range_in.value),r.seeThroughSelf=this.see_through_self_check.checked,r.foodDropProb=parseInt(this.food_drop_rate_in.value),r.extraMoverFoodCost=parseInt(this.extra_mover_cost_in.value),r.maxOrganisms=parseInt(this.org_limit_in.value),r.useGlobalMutability=this.evolved_mutation_check.checked,r.useGlobalMutability?this.global_mutation_cont.style.display="none":this.global_mutation_cont.style.display="block",r.globalMutability=parseInt(this.global_mutation_in.value),r.addProb=parseInt(this.add_prob_in.value),r.changeProb=parseInt(this.change_prob_in.value),r.removeProb=parseInt(this.remove_prob_in.value),r.moversCanProduce=this.movers_produce_check.checked,r.foodBlocksReproduction=this.food_blocks_check.checked}reset(){r.setDefaults(),this.food_prod_prob_in.value=r.foodProdProb,this.lifespan_multiplier_in.value=r.lifespanMultiplier,this.rot_enabled_check.checked=r.rotationEnabled,this.insta_kill_check.checked=r.instaKill,this.look_range_in.value=r.lookRange,this.see_through_self_check.checked=r.seeThroughSelf,this.food_drop_rate_in.value=r.foodDropProb,this.extra_mover_cost_in.value=r.extraMoverFoodCost,this.org_limit_in.value=r.maxOrganisms,this.evolved_mutation_check.checked=r.useGlobalMutability,this.global_mutation_in.value=r.globalMutability,this.add_prob_in.value=r.addProb,this.change_prob_in.value=r.changeProb,this.remove_prob_in.value=r.removeProb,this.movers_produce_check.checked=r.moversCanProduce,this.food_blocks_check.checked=r.foodBlocksReproduction,this.update()}save(){let t=JSON.stringify(r),e=new Blob([t],{type:"application/json"}),n=URL.createObjectURL(e);this.download_el.href=n,this.download_el.download="evolution_controls.json",this.download_el.click()}load(t){let e=t.target.files[0];if(e){let t=new FileReader;t.onload=t=>{let e=JSON.parse(t.target.result);r.loadJsonObj(e),this.reset()},t.readAsText(e)}}}t.exports=o},function(t,e,n){const r=n(5),o=n(1);class i{constructor(t){this.env=t,this.org_count_p=document.getElementById("org-count"),this.species_count_p=document.getElementById("species-count"),this.top_species_p=document.getElementById("top-species"),this.largest_org_p=document.getElementById("largest-org"),this.avg_mut_p=document.getElementById("avg-mut"),this.chart_option=document.getElementById("chart-option"),this.chart_note=document.getElementById("chart-note"),this.chart_container=document.getElementById("chartContainer"),this.chart_option.addEventListener("change",()=>this.buildChart()),this.buildChart()}update(){this.org_count_p.innerHTML="Total Population: "+this.env.organisms.length,this.species_count_p.innerHTML="Number of Species: "+r.numExtantSpecies();let t=r.getMostPopulousSpecies();this.top_species_p.innerHTML=t?"Most Populous Species: "+t.name:"Most Populous Species: N/A";let e=0;for(let t of Object.values(r.extant_species))t.anatomy.cells.length>e&&(e=t.anatomy.cells.length);this.largest_org_p.innerHTML="Largest Organism Ever: "+e,this.avg_mut_p.innerHTML="Average Mutation Rate: "+this.env.averageMutability().toFixed(2),this.updateChart()}buildChart(){let t=this.chart_option.value;this.chart_note.innerHTML="population"==t?"Total number of organisms in the world":"species"==t?"Total number of unique species in the world":"mut-rate"==t?"Average mutation rate of all organisms in the world":"structure"==t?"Average number of cells per organism in the world":"";let e=[];if("structure"==t)for(let t of o.living)e.push({type:"stackedArea",showInLegend:!0,name:t.name,color:t.color,dataPoints:[]});else e.push({type:"line",dataPoints:[]});this.chart=new CanvasJS.Chart(this.chart_container,{animationEnabled:!1,title:{text:""},axisX:{title:""},axisY:{title:""},toolTip:{shared:!0},legend:{cursor:"pointer",itemclick:function(t){"undefined"==typeof t.dataSeries.visible||t.dataSeries.visible?t.dataSeries.visible=!1:t.dataSeries.visible=!0,t.chart.render()}},data:e}),this.updateChart()}updateChart(){let t=this.chart_option.value;if("structure"==t)for(let t=0;t<r.tick_record.length;t++)for(let e=0;e<o.living.length;e++){let n=o.living[e].name,i=r.av_cell_counts[t][n];this.chart.options.data[e].dataPoints[t]={x:r.tick_record[t],y:i}}else for(let e=0;e<r.tick_record.length;e++){let n="population"==t?r.pop_counts[e]:"species"==t?r.species_counts[e]:"mut-rate"==t?r.av_mut_rates[e]:"structure"==t?r.av_cells[e]:0;this.chart.options.data[0].dataPoints[e]={x:r.tick_record[e],y:n}}this.chart.render()}}t.exports=i},function(t,e){class n{constructor(t){this.editor=t,this.panel=document.querySelector(".load-panel"),this.close_btn=document.getElementById("close-load-btn"),this.worlds_list=document.getElementById("worlds-list"),this.organisms_list=document.getElementById("organisms-list"),this.mods_list=document.getElementById("mods-list"),this.upload_el=document.getElementById("upload-json"),this.close_btn.addEventListener("click",()=>this.close()),this.upload_el.addEventListener("change",t=>this.load(t)),this.populateLists()}populateLists(){fetch("./data/worlds.json").then(t=>t.json()).then(t=>{t.forEach(t=>{let e=document.createElement("li");e.classList.add("list-item"),e.innerHTML=t.name,e.addEventListener("click",()=>this.loadWorld(t.file)),this.worlds_list.appendChild(e)})}),fetch("./data/organisms.json").then(t=>t.json()).then(t=>{t.forEach(t=>{let e=document.createElement("li");e.classList.add("list-item"),e.innerHTML=t.name,e.addEventListener("click",()=>this.loadOrganism(t.file)),this.organisms_list.appendChild(e)})}),fetch("./data/mods.json").then(t=>t.json()).then(t=>{t.forEach(t=>{let e=document.createElement("li");e.classList.add("list-item"),e.innerHTML=t.name,e.addEventListener("click",()=>this.loadMod(t.file)),this.mods_list.appendChild(e)})})}loadWorld(t){fetch("./data/"+t).then(t=>t.json()).then(t=>{this.editor.env.load(t),this.close()})}loadOrganism(t){fetch("./data/"+t).then(t=>t.json()).then(t=>{this.editor.setOrganism(t),this.close()})}loadMod(t){fetch("./data/"+t).then(t=>t.json()).then(t=>{this.editor.env.hyperparameters.loadJsonObj(t),this.close()})}open(){this.panel.style.display="block"}close(){this.panel.style.display="none"}}t.exports=n},function(t,e){class n{constructor(t){this.load_panel=t,this.btn=document.getElementById("community-creations-btn"),this.btn.addEventListener("click",()=>this.load_panel.open())}}t.exports=n},function(t,e){class n{constructor(t){this.env=t,this.pause_btns=document.querySelectorAll(".pause-button"),this.headless_btns=document.querySelectorAll(".headless"),this.pause_btns.forEach(t=>{t.addEventListener("click",()=>this.togglePause())}),this.headless_btns.forEach(t=>{t.addEventListener("click",()=>this.toggleHeadless())})}togglePause(){this.env.paused=!this.env.paused,this.pause_btns.forEach(t=>{t.innerHTML=this.env.paused?'<i class="fa fa-play"></i>':'<i class="fa fa-pause"></i>'})}toggleHeadless(){this.env.headless=!this.env.headless}}t.exports=n},function(t,e){class n{constructor(){this.notification=document.getElementById("headless-notification")}update(t){this.notification.style.display=t?"block":"none"}}t.exports=n},function(t,e){class n{constructor(t){this.tab_bar=t,this.btn=document.getElementById("maximize"),this.btn.addEventListener("click",()=>this.tab_bar.maximize())}}t.exports=n},function(t,e){class n{constructor(t){this.env=t,this.slider=document.getElementById("slider"),this.pause_btn=document.querySelector(".pause-button"),this.headless_btn=document.querySelector(".headless"),this.reset_btn=document.getElementById("reset-env"),this.clear_btn=document.getElementById("clear-env"),this.slider.addEventListener("input",()=>this.update()),this.pause_btn.addEventListener("click",()=>this.togglePause()),this.headless_btn.addEventListener("click",()=>this.toggleHeadless()),this.reset_btn.addEventListener("click",()=>this.env.reset()),this.clear_btn.addEventListener("click",()=>this.env.clear())}update(){this.env.sim_speed=this.slider.value}togglePause(){this.env.paused=!this.env.paused,this.pause_btn.innerHTML=this.env.paused?"Play":"Pause"}toggleHeadless(){this.env.headless=!this.env.headless}}t.exports=n},function(t,e){class n{constructor(t){this.editor=t,this.drag_view_btn=document.getElementById("drag-view"),this.wall_drop_btn=document.getElementById("wall-drop"),this.food_drop_btn=document.getElementById("food-drop"),this.click_kill_btn=document.getElementById("click-kill"),this.select_btn=document.getElementById("select"),this.edit_btn=document.getElementById("edit"),this.drop_org_btn=document.getElementById("drop-org"),this.save_org_btn=document.getElementById("save-org"),this.load_org_btn=document.getElementById("load-org"),this.reset_with_editor_org_btn=document.getElementById("reset-with-editor-org"),this.drag_view_btn.addEventListener("click",()=>this.setMode("drag_view")),this.wall_drop_btn.addEventListener("click",()=>this.setMode("wall_drop")),this.food_drop_btn.addEventListener("click",()=>this.setMode("food_drop")),this.click_kill_btn.addEventListener("click",()=>this.setMode("click_kill")),this.select_btn.addEventListener("click",()=>this.setMode("select")),this.edit_btn.addEventListener("click",()()=>(this.setMode("edit"),this.editor.is_editing=!this.editor.is_editing)),this.drop_org_btn.addEventListener("click",()=>this.setMode("drop_org")),this.save_org_btn.addEventListener("click",()=>this.editor.saveOrganism()),this.load_org_btn.addEventListener("click",()=>this.editor.loadOrganism()),this.reset_with_editor_org_btn.addEventListener("click",()=>this.editor.resetWithOrganism()),this.update()}setMode(t){this.editor.drag_view="drag_view"==t,this.editor.wall_drop="wall_drop"==t,this.editor.food_drop="food_drop"==t,this.editor.click_kill="click_kill"==t,this.editor.select="select"==t,this.editor.edit="edit"==t,this.editor.drop_org="drop_org"==t,this.update()}update(){this.drag_view_btn.classList.toggle("selected",this.editor.drag_view),this.wall_drop_btn.classList.toggle("selected",this.editor.wall_drop),this.food_drop_btn.classList.toggle("selected",this.editor.food_drop),this.click_kill_btn.classList.toggle("selected",this.editor.click_kill),this.select_btn.classList.toggle("selected",this.editor.select),this.edit_btn.classList.toggle("selected",this.editor.edit),this.drop_org_btn.classList.toggle("selected",this.editor.drop_org)}}t.exports=n},function(t,e){class n{constructor(t){this.renderer=t,this.btn=document.querySelector(".reset-view"),this.btn.addEventListener("click",()=>(this.renderer.camera_offset={x:0,y:0},this.renderer.camera_zoom=1))}}t.exports=n},function(t,e,n){const r=n(23),o=n(25),i=n(46);class s{constructor(){this.env=new r(100,100,5),this.env.reset(),this.editor=new i(this.env),this.renderer=new o(this.env,document.getElementById("env-canvas"),document.getElementById("editor-canvas"),this.editor),this.fps=60,this.fpsInterval=1e3/this.fps,this.then=Date.now(),this.startTime=this.then,this.paused=!1,this.headless=!1,this.setupHotkeys(),this.gameLoop()}setupHotkeys(){document.addEventListener("keydown",t=>{switch(t.key){case"a":this.renderer.reset_view_btn.btn.click();break;case"s":this.renderer.edit_mode_btns.drag_view_btn.click();break;case"d":this.renderer.edit_mode_btns.wall_drop_btn.click();break;case"f":this.renderer.edit_mode_btns.food_drop_btn.click();break;case"g":this.renderer.edit_mode_btns.click_kill_btn.click();break;case"h":this.renderer.hot_controls.headless_btns[0].click();break;case" ":this.renderer.hot_controls.pause_btns[0].click();break;case"b":this.renderer.world_controls_tab.clear_walls_btn.click();break;case"z":this.renderer.edit_mode_btns.select_btn.click();break;case"x":this.renderer.edit_mode_btns.edit_btn.click();break;case"c":this.renderer.edit_mode_btns.drop_org_btn.click()}})}gameLoop(){requestAnimationFrame(()=>this.gameLoop());let t=Date.now(),e=t-this.then;if(this.fps=this.renderer.speed_controller.slider.value,this.fpsInterval=1e3/this.fps,e>this.fpsInterval){if(this.then=t-e%this.fpsInterval,this.renderer.fps_actual_p.update(Math.round(1e3/e)),!this.paused){let t=this.env.update();t||(this.paused=!0,this.renderer.hot_controls.pause_btns.forEach(t=>{t.innerHTML='<i class="fa fa-play"></i>'}))}this.headless||this.renderer.drawGame(),this.renderer.headless_notification.update(this.headless),this.renderer.drawEditor(),this.renderer.stats_tab.update()}}start(){this.gameLoop()}}window.onload=()=>{new s}},function(t,e,n){const r=n(1),o=n(6);class i{constructor(t){this.env=t,this.organism=new o(0,0,this.env),this.organism.anatomy.addDefaultCell(r.mouth,0,0),this.drag_view=!1,this.wall_drop=!1,this.food_drop=!0,this.click_kill=!1,this.select=!1,this.edit=!1,this.drop_org=!1,this.is_editing=!1,this.build_cell_type=r.mouth,this.upload_el=document.getElementById("upload-json"),this.renderer=void 0}setRenderer(t){this.renderer=t}setOrganism(t){this.organism=new o(0,0,this.env),this.organism.loadRaw(t)}setBuildCellType(t){this.build_cell_type=t}clear(){this.organism.anatomy.clear(),this.organism.anatomy.addDefaultCell(r.mouth,0,0)}generateRandom(){this.clear();for(let t=0;t<10;t++){this.organism.mutate()}}resetWithOrganism(){this.organism&&this.env.resetWith(this.organism.serialize())}saveOrganism(){if(!this.organism)return;let t=this.organism.serialize(),e=JSON.stringify(t),n=new Blob([e],{type:"application/json"}),r=URL.createObjectURL(n),o=document.createElement("a");o.href=r,o.download=this.organism.species.name+".json",o.click()}loadOrganism(){this.upload_el.click(),this.upload_el.addEventListener("change",t=>this.load(t))}load(t){let e=t.target.files[0];if(e){let t=new FileReader;t.onload=t=>{let e=JSON.parse(t.target.result);this.setOrganism(e)},t.readAsText(e)}}interact(t,e){let n=Math.floor(t/this.env.grid_map.cell_size),i=Math.floor(e/this.env.grid_map.cell_size);if(this.wall_drop)for(let t=-this.renderer.brush_size;t<=this.renderer.brush_size;t++)for(let e=-this.renderer.brush_size;e<=this.renderer.brush_size;e++)this.env.changeCell(n+t,i+e,r.wall,null);else if(this.food_drop)for(let t=-this.renderer.brush_size;t<=this.renderer.brush_size;t++)for(let e=-this.renderer.brush_size;e<=this.renderer.brush_size;e++)this.env.changeCell(n+t,i+e,r.food,null);else if(this.click_kill)for(let t=-this.renderer.brush_size;t<=this.renderer.brush_size;t++)for(let e=-this.renderer.brush_size;e<=this.renderer.brush_size;e++){let o=this.env.grid_map.cellAt(n+t,i+e);o&&o.owner&&o.owner.die()}else if(this.select){let t=this.env.grid_map.cellAt(n,i);t&&t.owner&&(this.organism=t.owner)}else if(this.edit&&this.organism){let t=Math.round((n-this.organism.c)/this.env.grid_map.cell_size),e=Math.round((i-this.organism.r)/this.env.grid_map.cell_size);this.organism.anatomy.replaceCell(this.build_cell_type,t,e)}else this.drop_org&&this.organism&&this.env.canAddOrganism()&&(this.organism.c=n,this.organism.r=i,this.env.addOrganism(this.organism),this.organism.updateGrid())}}t.exports=i}]);